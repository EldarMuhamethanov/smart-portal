{
  "site-title": "SmartPortal - your universal tool for interacting with smart contracts",
  "select-env-title": "Select environment",
  "add-contract-button": "Add contract",
  "common": {
    "cancel": "Cancel",
    "calldata": "Calldata",
    "parameters": "Parameters"
  },
  "common-form": {
    "required-field": "This field is required",
    "please-input-value": "Please enter a value"
  },
  "adding-contract-card": {
    "title": "Adding a contract",
    "contract-address": "Contract address",
    "add-button": "Add",
    "incorrect-contract-address": "Please enter a valid smart contract address"
  },
  "code": {
    "not-verified": "Unfortunately, we cannot display the source code of the smart contract as this smart contract is not verified. However, you can use the custom query builder for this smart contract on the 'Methods' tab"
  },
  "contract-card": {
    "address-copied": "Contract address copied",
    "methods-tab": "Methods",
    "storage-tab": "Storage",
    "code-tab": "Code",
    "storage": {
      "result-copied": "Result copied",
      "number-slot": "Slot number",
      "result": "Result",
      "get-value": "Get value"
    },
    "methods": {
      "calldata-copied": "Calldata copied to clipboard",
      "failed-calldata-copied-title": "Calldata not copied",
      "failed-calldata-copied-description": "Not all fields were filled or were filled incorrectly",

      "parameters-copied": "Parameters copied to clipboard",
      "failed-parameters-copied-title": "Parameters not copied",
      "failed-parameters-copied-description": "Not all fields were filled or were filled incorrectly",

      "not-verified": "Unfortunately, this contract is not verified, so we cannot display its methods",

      "account-title": "Account",
      "select-account": "Select user",

      "value-title": "Value",

      "gas-title": "Gas",
      "estimated-gas": "Estimated gas",
      "custom-gas": "Custom",

      "custom-methods": "Custom methods",
      "add-custom-method": "Add method",
      "custom-methods-placeholder": "No custom methods have been added yet. You can add one using the \"Add method button\"",
      "adding-custom-method": "Adding a method",
      "method-type": "Method type",
      "method-name": "Method name",
      "input-values": "Input values",
      "output-values": "Output values",
      "input-value-type": "Input value type",
      "output-value-type": "Output value type",
      "add-input-value": "Add input value",
      "add-output-value": "Add output value",
      "add-method-button": "Add",

      "lowlevel-transaction": "Low-level transaction",
      "call-transaction": "Call",

      "copy-field-value": "fieldName field value copied to clipboard"
    }
  },
  "documentation": {
    "title": "How to use the application",
    "step1": {
      "title": "Select environment",
      "description": "To get started, you need to select an environment. The following options are available:",
      "metamask": {
        "title": "Metamask",
        "description": "To work with public networks (Ethereum, Polygon, etc.), select Metamask. Make sure the Metamask extension is installed in your browser and you are logged into your account."
      },
      "local": {
        "title": "Local networks (Hardhat/Foundry)",
        "description": "To work with a local network, you first need to start a local node of the selected framework:",
        "hardhat": "Start the node with the command npx hardhat node",
        "foundry": "Start the node with the command anvil",
        "rpc_description": "After starting the node, specify the corresponding JSON RPC URL in the input field. Standard URLs for local nodes:"
      }
    },
    "step2": {
      "title": "Add a smart contract",
      "description": "Click the \"Add contract\" button and enter the smart contract address in the selected network"
    },
    "step3": {
      "title": "Interact with the contract",
      "description": "After adding the contract, the following tabs will be available:",
      "tabs": {
        "methods": {
          "title": "Methods",
          "description": "Tab for interacting with smart contract functions.",
          "verification": "Contract methods will be available automatically if the contract is verified in the network. If the contract is not verified, you can add the ABI manually in the ABI tab.",
          "constructor": "Each method has a convenient constructor with parameter input fields. After filling in the parameters, you can call the method or get calldata for later use.",
          "custom_methods": "If you know the method signature but don't have the full ABI, you can create a custom method using the method constructor. This will allow you to interact with unverified contracts."
        },
        "storage": {
          "title": "Storage",
          "description": "Allows reading data directly from contract storage slots. Enter the slot number (from 0 to 2^256-1) and click the button to get the value stored in that slot."
        },
        "code": {
          "title": "Code",
          "description": "Displays the smart contract source code. Only available for contracts that have been verified in the network (source code has been published and confirmed)."
        },
        "abi": {
          "title": "ABI",
          "description": "Allows viewing and editing the contract ABI. If the contract is not verified but you have its ABI, you can add it here. After adding the ABI, all contract methods will be available in the Methods tab."
        },
        "events": {
          "title": "Events",
          "description": "Shows the contract event history. You can filter events by their type and indexed parameter values, which allows you to quickly find the needed events in the contract history."
        }
      }
    }
  }
}
